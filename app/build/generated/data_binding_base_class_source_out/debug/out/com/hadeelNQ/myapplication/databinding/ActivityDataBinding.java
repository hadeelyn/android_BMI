// Generated by view binder compiler. Do not edit!
package com.hadeelNQ.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hadeelNQ.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final Button button4;

  @NonNull
  public final EditText editTextTextPersonName3;

  @NonNull
  public final EditText height;

  @NonNull
  public final LinearLayout laoyoutBack;

  @NonNull
  public final LinearLayout layoutLength;

  @NonNull
  public final LinearLayout layoutLogo;

  @NonNull
  public final LinearLayout layoutReg;

  @NonNull
  public final LinearLayout layoutWeight;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final EditText width;

  private ActivityDataBinding(@NonNull RelativeLayout rootView, @NonNull Button button,
      @NonNull Button button2, @NonNull Button button3, @NonNull Button button4,
      @NonNull EditText editTextTextPersonName3, @NonNull EditText height,
      @NonNull LinearLayout laoyoutBack, @NonNull LinearLayout layoutLength,
      @NonNull LinearLayout layoutLogo, @NonNull LinearLayout layoutReg,
      @NonNull LinearLayout layoutWeight, @NonNull TextView textView, @NonNull TextView textView3,
      @NonNull EditText width) {
    this.rootView = rootView;
    this.button = button;
    this.button2 = button2;
    this.button3 = button3;
    this.button4 = button4;
    this.editTextTextPersonName3 = editTextTextPersonName3;
    this.height = height;
    this.laoyoutBack = laoyoutBack;
    this.layoutLength = layoutLength;
    this.layoutLogo = layoutLogo;
    this.layoutReg = layoutReg;
    this.layoutWeight = layoutWeight;
    this.textView = textView;
    this.textView3 = textView3;
    this.width = width;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button3;
      Button button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName3;
      EditText editTextTextPersonName3 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName3 == null) {
        break missingId;
      }

      id = R.id.height;
      EditText height = ViewBindings.findChildViewById(rootView, id);
      if (height == null) {
        break missingId;
      }

      id = R.id.laoyout_back;
      LinearLayout laoyoutBack = ViewBindings.findChildViewById(rootView, id);
      if (laoyoutBack == null) {
        break missingId;
      }

      id = R.id.layout_length;
      LinearLayout layoutLength = ViewBindings.findChildViewById(rootView, id);
      if (layoutLength == null) {
        break missingId;
      }

      id = R.id.layout_logo;
      LinearLayout layoutLogo = ViewBindings.findChildViewById(rootView, id);
      if (layoutLogo == null) {
        break missingId;
      }

      id = R.id.layout_Reg;
      LinearLayout layoutReg = ViewBindings.findChildViewById(rootView, id);
      if (layoutReg == null) {
        break missingId;
      }

      id = R.id.layout_weight;
      LinearLayout layoutWeight = ViewBindings.findChildViewById(rootView, id);
      if (layoutWeight == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.width;
      EditText width = ViewBindings.findChildViewById(rootView, id);
      if (width == null) {
        break missingId;
      }

      return new ActivityDataBinding((RelativeLayout) rootView, button, button2, button3, button4,
          editTextTextPersonName3, height, laoyoutBack, layoutLength, layoutLogo, layoutReg,
          layoutWeight, textView, textView3, width);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
