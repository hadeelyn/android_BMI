// Generated by view binder compiler. Do not edit!
package com.hadeelNQ.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.hadeelNQ.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout container;

  @NonNull
  public final TextInputLayout hide;

  @NonNull
  public final LinearLayout laoyoutBack;

  @NonNull
  public final LinearLayout layoutLogo;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText loginPassword;

  @NonNull
  public final EditText loginUser;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout container,
      @NonNull TextInputLayout hide, @NonNull LinearLayout laoyoutBack,
      @NonNull LinearLayout layoutLogo, @NonNull Button loginBtn, @NonNull EditText loginPassword,
      @NonNull EditText loginUser) {
    this.rootView = rootView;
    this.container = container;
    this.hide = hide;
    this.laoyoutBack = laoyoutBack;
    this.layoutLogo = layoutLogo;
    this.loginBtn = loginBtn;
    this.loginPassword = loginPassword;
    this.loginUser = loginUser;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout container = (RelativeLayout) rootView;

      id = R.id.hide;
      TextInputLayout hide = ViewBindings.findChildViewById(rootView, id);
      if (hide == null) {
        break missingId;
      }

      id = R.id.laoyout_back;
      LinearLayout laoyoutBack = ViewBindings.findChildViewById(rootView, id);
      if (laoyoutBack == null) {
        break missingId;
      }

      id = R.id.layout_logo;
      LinearLayout layoutLogo = ViewBindings.findChildViewById(rootView, id);
      if (layoutLogo == null) {
        break missingId;
      }

      id = R.id.login_btn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.login_password;
      EditText loginPassword = ViewBindings.findChildViewById(rootView, id);
      if (loginPassword == null) {
        break missingId;
      }

      id = R.id.login_user;
      EditText loginUser = ViewBindings.findChildViewById(rootView, id);
      if (loginUser == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, container, hide, laoyoutBack,
          layoutLogo, loginBtn, loginPassword, loginUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
