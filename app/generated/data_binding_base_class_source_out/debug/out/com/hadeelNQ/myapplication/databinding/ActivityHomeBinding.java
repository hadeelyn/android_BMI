// Generated by view binder compiler. Do not edit!
package com.hadeelNQ.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.hadeelNQ.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button addFood;

  @NonNull
  public final Button addRecord;

  @NonNull
  public final LinearLayout laoyoutAdd;

  @NonNull
  public final LinearLayout laoyoutBack;

  @NonNull
  public final LinearLayout layoutItem;

  @NonNull
  public final LinearLayout layoutLogo;

  @NonNull
  public final LinearLayout layoutView;

  @NonNull
  public final TextView logout;

  @NonNull
  public final RecyclerView recordsRv;

  @NonNull
  public final EditText status;

  @NonNull
  public final Button viewFood;

  @NonNull
  public final TextView welcomeName;

  private ActivityHomeBinding(@NonNull RelativeLayout rootView, @NonNull Button addFood,
      @NonNull Button addRecord, @NonNull LinearLayout laoyoutAdd,
      @NonNull LinearLayout laoyoutBack, @NonNull LinearLayout layoutItem,
      @NonNull LinearLayout layoutLogo, @NonNull LinearLayout layoutView, @NonNull TextView logout,
      @NonNull RecyclerView recordsRv, @NonNull EditText status, @NonNull Button viewFood,
      @NonNull TextView welcomeName) {
    this.rootView = rootView;
    this.addFood = addFood;
    this.addRecord = addRecord;
    this.laoyoutAdd = laoyoutAdd;
    this.laoyoutBack = laoyoutBack;
    this.layoutItem = layoutItem;
    this.layoutLogo = layoutLogo;
    this.layoutView = layoutView;
    this.logout = logout;
    this.recordsRv = recordsRv;
    this.status = status;
    this.viewFood = viewFood;
    this.welcomeName = welcomeName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_food;
      Button addFood = ViewBindings.findChildViewById(rootView, id);
      if (addFood == null) {
        break missingId;
      }

      id = R.id.add_record;
      Button addRecord = ViewBindings.findChildViewById(rootView, id);
      if (addRecord == null) {
        break missingId;
      }

      id = R.id.laoyout_add;
      LinearLayout laoyoutAdd = ViewBindings.findChildViewById(rootView, id);
      if (laoyoutAdd == null) {
        break missingId;
      }

      id = R.id.laoyout_back;
      LinearLayout laoyoutBack = ViewBindings.findChildViewById(rootView, id);
      if (laoyoutBack == null) {
        break missingId;
      }

      id = R.id.layout_item;
      LinearLayout layoutItem = ViewBindings.findChildViewById(rootView, id);
      if (layoutItem == null) {
        break missingId;
      }

      id = R.id.layout_logo;
      LinearLayout layoutLogo = ViewBindings.findChildViewById(rootView, id);
      if (layoutLogo == null) {
        break missingId;
      }

      id = R.id.layout_view;
      LinearLayout layoutView = ViewBindings.findChildViewById(rootView, id);
      if (layoutView == null) {
        break missingId;
      }

      id = R.id.logout;
      TextView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.records_rv;
      RecyclerView recordsRv = ViewBindings.findChildViewById(rootView, id);
      if (recordsRv == null) {
        break missingId;
      }

      id = R.id.status;
      EditText status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.view_food;
      Button viewFood = ViewBindings.findChildViewById(rootView, id);
      if (viewFood == null) {
        break missingId;
      }

      id = R.id.welcome_name;
      TextView welcomeName = ViewBindings.findChildViewById(rootView, id);
      if (welcomeName == null) {
        break missingId;
      }

      return new ActivityHomeBinding((RelativeLayout) rootView, addFood, addRecord, laoyoutAdd,
          laoyoutBack, layoutItem, layoutLogo, layoutView, logout, recordsRv, status, viewFood,
          welcomeName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
